/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.github.mergeOpenApi

import org.gradle.api.DefaultTask
import org.gradle.api.Plugin
import org.gradle.api.Project
import org.gradle.api.provider.Property
import org.gradle.api.tasks.Input
import org.gradle.api.tasks.TaskAction
import org.slf4j.LoggerFactory
import java.io.File
import javax.inject.Inject


open class MergeOpenapiExtension {

    var input = mutableListOf<File>()

}

open class MergeOpenapiTask @Inject constructor(@Input val extension: MergeOpenapiExtension): DefaultTask() {

    @TaskAction
    fun invoke() {
        if (extension.input.isEmpty()) {
            throw IllegalArgumentException("Input must has values!")
        }

        println(extension.input[0].absoluteFile)
    }
}

/**
 * A simple 'hello world' plugin.
 */
class MergeOpenapiPlugin : Plugin<Project> {
    override fun apply(project: Project) {
        val extension = project.extensions.create("mergeOpenapi", MergeOpenapiExtension::class.java)
        // Register a task
        project.tasks.register("mergeOpenapi", MergeOpenapiTask::class.java, extension)
    }
}
